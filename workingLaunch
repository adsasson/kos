//LAUNCH script
//Takes Target Apo, Target Heading, and Circularize Flag. 
//Initiates GT to target Apo, PID to TWR (though may change to target air resistance or max q). 
//Calls onOrbitBurn at target apo

DECLARE PARAMETER targetHeading IS 90, targetApo IS 100000, circularize IS FALSE.

LOCAL OKtoLAUNCH TO FALSE.
LOCAL OKtoSTAGE TO FALSE.

SET currentShip TO SHIP.
SET currentBody TO currentShip:BODY.
LOCAL atmoHeight TO 0.
LOCAL targetPeri TO 0. 							//until you can figure out minimun altitude for atmosphere vs terrain features on airless worlds.
LOCAL currentPitch TO 90.
LOCK currentThrottle TO SHIP:CONTROL:PILOTMAINTHROTTLE.


LOCK currentMass TO currentShip:MASS.
LOCK currentG to currentBody:MU/(currentShip:ALTITUDE + currentBody:RADIUS)^2.
LOCK maxTWR TO (currentShip:AVAILABLETHRUST/(currentMass * currentG)).
LOCK currentTWR TO maxTWR * currentThrottle.

IF circularize {
	SET targetPeri TO targetApo.
	PRINT "PERI: " + targetPeri.
	PRINT "APO: " + targetApo.
	SET OKtoLaunch TO TRUE.
} ELSE IF currentBody:ATM:EXISTS { 				//check for atmo, if present, set peri to atmo + 1000
	SET atmoHeight TO currentBody:ATM:HEIGHT.
		IF targetApo >= atmoHeight {
			SET OKtoLaunch TO TRUE.
			SET targetPeri TO (atmoHeight + 1000).
			PRINT "Setting target Periapsis to " + targetPeri.
		} ELSE {
		PRINT "Target Apoapsis will not clear " + currentBody:NAME + "'s atmosphere.".
	}
}

//TWR PID LOOP SETTINGS
SET Kp TO 0.1.
SET Ki TO 0.006.
SET Kd TO 0.001.
SET twrPID TO PIDLOOP(Kp,Ki,Kd).
SET twrPID:SETPOINT TO 2.

//HEADING
SET currentHeading TO HEADING(targetHeading,currentPitch).
SET Ka TO 1.



//LAUNCH ROUTINE
//?countdown?

SET currentThrottle TO 0.5.
LOCK STEERING TO currentHeading.
LOCK THROTTLE TO currentThrottle.

IF OKtoLaunch {
	STAGE.
} ELSE {
	PRINT "No go for launch".
}
LOCK currentStage TO STAGE.
LOCK nextStage TO currentStage:NUMBER - 1.


//ASCENT
LOCK testVar TO ROUND((currentShip:ALTITUDE/atmoHeight),2).
//LOCK deltaPitch TO 90 * (1.5 * testVar).
LOCK deltaPitch TO 90*-CONSTANT:E^(-testVar).

UNTIL currentShip:APOAPSIS >= targetApo {
	SET currentThrottle TO MIN(1, MAX(0,currentThrottle + twrPID:UPDATE(TIME:SECONDS, currentTWR))).
	SET currentPitch TO 90 - (MIN(90,deltaPitch)).
	PRINT "current Pitch:" + currentPitch.
	PRINT "deltaPitch: " + deltaPitch.
	
	SET currentHeading TO HEADING(targetHeading,currentPitch).
	//TEST STAGING LOGIC
	WHEN NOT (currentShip:AVAILABLETHRUST > 0) THEN {
		PRINT "TIME TO STAGE!".
		STAGE.
		IF STAGE:NUMBER > 0 {
			RETURN TRUE. 
		} ELSE {
			RETURN FALSE.
		}
	}

	
	
	PRINT "ATMO HEIGHT FRACTION: " + ROUND((currentShip:ALTITUDE/atmoHeight),2).
	CLEARSCREEN.
	
	
	

	WAIT 0.
}

PRINT "Target Apoapsis Reached.".

IF currentShip:ALTITUDE < targetApo {
	SET currentThrottle TO 0.
}

LOCK currentHeading TO currentShip:PROGRADE.

//call on orbit burn 
//placehodler for now

WAIT UNTIL ETA:APOAPSIS < 10.

UNTIL currentShip:PERIAPSIS >= targetPeri {
	SET currentThrottle TO 1.
	WAIT 0.
}

SET THROTTLE TO 0.
UNLOCK STEERING.

